#!/bin/bash
# tilup - ping a computer until it is up
# Copyright 2022 Jeremy Wakeman
# SPDX-License-Identifier: GPL-3.0-or-later

bell=0
options=0
port=0
wait=0

# if help is requested, show usage and options
if [[ "$*"" == " ]] || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]] ; then
	exec_name=`basename $0`
	echo "Usage: $exec_name [OPTION] <server>"
	echo "check a server until it is up"
	echo ""
	echo "  -b,         bell when connecting"
	echo "  -h, --help  display this help and exit"
	echo "  -p [port]   check alternate port"
	echo "  -w          wait 30 seconds between ping and connect"
	echo ""
	echo "Examples:"
	echo "  $exec_name -bw 192.168.0.1   use bell and wait, check 192.168.0.1"
	echo "  $exec_name 192.168.0.1 | netctl stop wlan-home   check 192.168.0.1, then stop wifi"
	exit 0
fi

# if options are passed, parse them
if [[  $1 =~ - ]] ; then
	if [[ $1 =~ b ]] ; then
		bell=1
	fi
	if [[ $1 =~ w ]] ; then
		wait=1
	fi
	if [[ $1 =~ p ]] ; then
		port=$2
		shift
	fi
	shift
fi

if [[ "$1" == "" ]] ; then
	host="neverssl.com"
	port=80
	echo -n "checking if $host is up "
	ipup=0
	while [[ $ipup -eq 0 ]] ; do
		nc -zw 2 $host $port 2>/dev/null && ipup=1
		echo -n ". "
		sleep 1
	done
	echo "done"
else
	while [[ "$1" != "" ]] ; do
		# parse address or hostname to check
		host=$1
		shift
		echo -n "checking if $host is up "
		ipup=0
		while [[ $ipup -eq 0 ]] ; do
			if [[ $port -eq 0 ]] ; then
				ping -w 2 $host && ipup=1
			else
				nc -zw 2 $host $port 2>/dev/null && ipup=1
			fi
			echo -n ". "
			sleep 1
		done
		echo "done"
	done
fi

# if we should wait, wait
if [ "$wait" == "1" ] ; then
	echo sleeping for 10 seconds . . .
	sleep 10
fi
# if we should bell, bell
if [ "$bell" == "1" ] ; then
	/usr/local/bin/bell
fi
