#!/bin/bash

bell=0
down=0
loop=0
pause=0
root=0
telnet=0
onlytry=0
options=0

# if there's an issue with the command, print usage
if [ "$*" == "" ] ; then
	echo "Usage: whenup [-bloprt] [host to ping] [command to execute]"
	exit 1
else

	# if options are passed, parse them
	if [[  $1 =~ - ]] ; then
		if [[ $1 =~ b ]] ; then
			bell=1
		fi
		if [[ $1 =~ d ]] ; then
			down=1
		fi
		if [[ $1 =~ l ]] ; then
			loop=1
		fi
		if [[ $1 =~ o ]] ; then
			onlytry=1
		fi
		if [[ $1 =~ p ]] ; then
			pause=1
		fi
		if [[ $1 =~ r ]] ; then
			root=1
		fi
		if [[ $1 =~ t ]] ; then
			telnet=1
		fi
		shift
	fi

	# parse address or hostname to ping
	ping=$1
	shift

	# if no command given, assume ssh the address or hostname
	if [ "$*" == "" ] ; then
		if [ "$root" == "1" ] ; then
			if [ "$telnet" == "1" ] ; then
				echo "Error: -r option and -t option should not be used together"
				exit 1
			fi
			run="ssh root@$ping"
		elif [ "$telnet" == "1" ] ; then
			run="telnet $ping"
		else
			run="ssh $ping"
		fi
	else
		if [ "$root" == "1" ] ; then
			echo "Error: -r option should not be used with an explicit command"
			exit 1
		elif [ "$telnet" == "1" ] ; then
			echo "Error: -t option should not be used with an explicit command"
			exit 1
		else
			run=$*
		fi
	fi
fi

# make sure IP is down first, if that option was selected
if [ "$down" == "1" ] ; then
	echo -n "Waiting for $ping to be down "
	ipdown=0
	while [ "$ipdown" -eq "0" ] ; do
		echo -n ". "
		ping -w 2 $ping > /dev/null || ipdown=1
		sleep 1
	done
	echo "done"
fi

# if we should pause, pause
if [ "$pause" == "1" ] ; then
	echo sleeping for 10 seconds . . .
	sleep 10
fi
# if we should bell, bell
if [ "$bell" == "1" ] ; then
	/home/cael/.bin/bell
fi

# if we should loop, loop
if [ "$loop" == "1" ] ; then
	while [ true ] ; do
		echo -n "Waiting for $ping to be up "
		ipup=0
		numtries=0
		while [ "$ipup" -eq "0" ] ; do
			echo -n ". "
			ping -w 2 $ping >/dev/null && ipup=1
			sleep 1
			numtries=$(($numtries+1))
			if [ "$onlytry" -eq "1" ] && [ "$numtries" -ge "3" ] ; then
				echo "No response after three tries, quitting"
				exit 1
			fi
		done
		echo "done"
		# if we should pause, pause
		if [ "$pause" == "1" ] ; then
			echo sleeping for 15 seconds . . .
			sleep 15
		fi
		# if we should bell, bell
		if [ "$bell" == "1" ] ; then
			/home/cael/.bin/bell
		fi
		$run
		echo sleeping for 15 seconds . . .
		sleep 15
	done
# here's the non-looping version
else
	echo -n "Waiting for $ping to be up "
	ipup=0
	numtries=0
	while [ "$ipup" -eq "0" ] ; do
		echo -n ". "
		ping -w 2 $ping >/dev/null && ipup=1
		sleep 1
		numtries=$(($numtries+1))
		if [ "$onlytry" -eq "1" ] && [ "$numtries" -ge "3" ] ; then
			echo "No response after three tries, quitting"
			exit 1
		fi
	done
	echo "done"
	# if we should pause, pause
	if [ "$pause" == "1" ] ; then
		echo sleeping for 15 seconds . . .
		sleep 15
	fi
	# if we should bell, bell
	if [ "$bell" == "1" ] ; then
		~/.bin/bell
	fi
	$run
fi
